using Microsoft.SemanticKernel;
using Microsoft.SemanticKernel.Connectors.OpenAI;
using Microsoft.SemanticKernel.ChatCompletion;

var kernel = Kernel.CreateBuilder()
    .AddOpenAIChatCompletion("gpt-4o", "your-openai-api-key")
    .Build();

var chat = kernel.GetRequiredService<IChatCompletion>();

// Example HTML
string html = File.ReadAllText("report.html");

// Extract base64 string from <img> tag
string base64Image = ExtractBase64FromHtml(html); // You can implement a simple regex for this

// Create ImageContent from Base64
var imageContent = new ImageContent
{
    DataUri = $"data:image/png;base64,{base64Image}"
};

// Add text content (you can keep it as full HTML or stripped text)
var textContent = new TextContent("Analyze the report and chart below: \n" + html);

// Create the composite message
var message = new ChatMessageContent(
    AuthorRole.User,
    "Please analyze the following report and its embedded chart.",
    textContent,
    imageContent
);

// Send to GPT-4o
var response = await chat.GetChatMessageContentAsync(message);
Console.WriteLine(response.Content);

// Helper
string ExtractBase64FromHtml(string html)
{
    var match = System.Text.RegularExpressions.Regex.Match(
        html,
        @"data:image\/[a-zA-Z]+;base64,([A-Za-z0-9+/=]+)"
    );
    return match.Success ? match.Groups[1].Value : "";
}


var imageContents = ExtractAllBase64Images(html)
    .Select(b64 => new ImageContent { DataUri = $"data:image/png;base64,{b64}" })
    .ToArray();

var message = new ChatMessageContent(
    AuthorRole.User,
    "Analyze this HTML report and all images in context.",
    new TextContent(html)
);
message.Contents.AddRange(imageContents);
